SCCTEXT Version 4.0.0.2
PLATFORM C(8,0),UNIQUEID C(10,0),TIMESTAMP N(10,0),CLASS M(4,0),CLASSLOC M(4,0),BASECLASS M(4,0),OBJNAME M(4,0),PARENT M(4,0),PROPERTIES M(4,0),PROTECTED M(4,0),METHODS M(4,0),OBJCODE M(4,0),OLE M(4,0),OLE2 M(4,0),RESERVED1 M(4,0),RESERVED2 M(4,0),RESERVED3 M(4,0),RESERVED4 M(4,0),RESERVED5 M(4,0),RESERVED6 M(4,0),RESERVED7 M(4,0),RESERVED8 M(4,0),USER M(4,0)
1252

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] Class     
[START RESERVED1]
VERSION =   3.00[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1LF07JIC5
[CLASS] container
[BASECLASS] container
[OBJNAME] pbbar
[START PROPERTIES]
BackStyle = 0
BorderWidth = 0
Height = 15
Name = "pbbar"
Width = 15
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
LPARAMETERS tnColor, tnWidth, tnHeight

LOCAL lnCounter, lnHalfHeight, lnRedColor, lnGreenColor, lnBlueColor, lnRedAdd, lnGreenAdd, lnBlueAdd, ;
	lcControlName, loControl

This.Width = tnWidth
This.Height = tnHeight
lnHalfHeight = INT(tnHeight / 2)
lnRedColor = 0
lnGreenColor = 0
lnBlueColor = 0
lnRedAdd = INT(255/lnHalfHeight)
lnGreenAdd = lnRedAdd
lnBlueAdd = lnRedAdd

DO CASE
	CASE tnColor = 1 && Red
		lnRedAdd = INT(57/lnHalfHeight)
		lnRedColor = 198
	CASE tnColor = 2 && Green
		lnGreenAdd = INT(57/lnHalfHeight)
		lnGreenColor = 198
	CASE tnColor = 3 && Blue
		lnBlueAdd = INT(57/lnHalfHeight)
		lnBlueColor = 198
ENDCASE

lcControlName = SYS(2015)
This.AddObject(lcControlName, "Line")
loControl = EVALUATE("this." + lcControlName)
WITH loControl
	.BorderColor = RGB(lnRedColor, lnGreenColor, lnBlueColor)
	.Left = 0
	.Top = lnHalfHeight
	.Width = tnWidth
	.Height = 0
	.DrawMode = 14
	.Visible = .T.
ENDWITH

FOR lncounter = lnHalfHeight TO 1 STEP -1
	lcControlName = SYS(2015)
	This.AddObject(lcControlName, "Line")
	loControl = EVALUATE("this." + lcControlName)
	WITH loControl
		.BorderColor = RGB(lnRedColor, lnGreenColor, lnBlueColor)
		.Left = 0
		.Top = lnCounter - 1
		.Width = tnWidth
		.Height = 0
		.DrawMode = 14
		.Visible = .T.
	ENDWITH
	IF (tnHeight - lnCounter) != lnHalfHeight
		lcControlName = SYS(2015)
		This.AddObject(lcControlName, "Line")
		loControl = EVALUATE("this." + lcControlName)
		WITH loControl
			.BorderColor = RGB(lnRedColor, lnGreenColor, lnBlueColor)
			.Left = 0
			.Top = tnHeight - lnCounter
			.Width = tnWidth
			.Height = 0
			.DrawMode = 14
			.Visible = .T.
		ENDWITH
	ENDIF
	lnRedColor = MIN(lnRedColor + lnRedAdd, 255)
	lnGreenColor = MIN(lnGreenColor + lnGreenAdd, 255)
	lnBlueColor = MIN(lnBlueColor + lnBlueAdd, 255)	
ENDFOR

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] pbbar

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1LF07IKPX
[CLASS] container
[BASECLASS] container
[OBJNAME] progressbar
[START PROPERTIES]
Height = 18
Name = "progressbar"
Style = 3
Width = 200
barcolor = 2
bars = 20
max = 100
min = 0
percentage = 0
showpercentage = .F.
solidbar = .F.
value = 0
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
LOCAL lnBarWidth, lnCounter, lcControlName
SET CLASSLIB TO (LOCFILE("progressbarex.vcx")) ADDITIVE

WITH THIS
	lnBarWidth = IIF(.solidbar, INT(.width/.bars), INT((.WIDTH - .bars) / .bars))
	
	FOR lnCounter = 1 TO this.bars -1
		lcControlName = "pbBar" + TRANSFORM(lnCounter)
		.ADDOBJECT(lcControlName, "pbbar", .BarColor, lnBarWidth, .HEIGHT -2)
		.CONTROLS(lnCounter).LEFT = IIF(.solidbar, lnBarWidth * (lnCounter -1) + 1, (lnBarWidth * (lnCounter -1)) + (2 * (lnCounter -1)) + 1)
		.CONTROLS(lnCounter).TOP = 1
	ENDFOR

	lnCounter = this.bars
	lcControlName = "pbBar" + TRANSFORM(lnCounter)
	.ADDOBJECT(lcControlName, "pbbar", .BarColor, lnBarWidth, .HEIGHT - 2)
	.CONTROLS(lnCounter).LEFT = IIF(.solidbar, .CONTROLS(lnCounter - 1).LEFT + lnBarWidth, .CONTROLS(lnCounter - 1).LEFT + lnBarWidth + 2)
	.CONTROLS(lnCounter).WIDTH = IIF(.solidbar, Max((.WIDTH - 1) -.CONTROLS(lnCounter).LEFT, 1),  Max(.WIDTH - .CONTROLS(lnCounter).LEFT - 2, 1))
	.CONTROLS(lnCounter).TOP = 1
	
	IF .showpercentage
		.ADDOBJECT("lblPercent", "Label")
		WITH .lblPercent
			.fontbold = .T.
			.backstyle = 0
			.ForeColor = ICASE(this.barcolor = 1, RGB(255, 0, 0), this.barcolor = 2, RGB(0, 255, 0), this.barcolor = 3, RGB(0, 0, 255))
			.alignment = 2
			.autosize = .t.
			.caption = "100%"
			.top = (this.height/2 - .height/2)
			.Left = this.width/2 - .width/2
			.caption = "0%"
			.visible = .T.
			.ZOrder(1)
		ENDWITH
	ENDIF
ENDWITH

ENDPROC
PROCEDURE percentage_access
RETURN (this.value/Max((this.max - this.min), 1)) * 100

ENDPROC
PROCEDURE value_assign
LPARAMETERS vNewVal
LOCAL lnCounter, lnMax, loControl
THIS.VALUE = m.vNewVal
lnMax = int(THIS.percentage)/100 * THIS.bars
FOR lnCounter = 1 TO THIS.bars
	loControl = EVALUATE("this.pbBar" + TRANSFORM(lnCounter))
	loControl.VISIBLE = BETWEEN(lnCounter, 1, lnMax)
ENDFOR
IF THIS.showpercentage
	THIS.lblPercent.caption = TRANSFORM(int(THIS.percentage)) + "%"
ENDIF


ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
*percentage_access 
*value_assign 
barcolor 1 = Red 2 = Green 3 = Blue
bars
max
min
percentage
showpercentage
solidbar
value Specifies the current state of a control.
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] progressbar
[EOF]
